{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEamil","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","class","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","Navigation","display","justifyContent","alignItem","width","textAlign","to","margin","flexDirection","justifyItems","fontSize","faUser","pull","AppRouter","isLoggedIn","maxWidth","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57f4a719.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// var firebaseConfig = {\r\n//   apiKey: \"AIzaSyBDvKa3i3grCE43CYnLdaa8fomuETnqUeg\",\r\n//   authDomain: \"nwitter-9a4d3.firebaseapp.com\",\r\n//   projectId: \"nwitter-9a4d3\",\r\n//   storageBucket: \"nwitter-9a4d3.appspot.com\",\r\n//   messagingSenderId: \"406457704686\",\r\n//   appId: \"1:406457704686:web:1d355db72c37bd869cd3ff\"\r\n// };\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\n//firebase를 엄청 부를 예정\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, {useState} from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\n\r\nconst AuthForm = () => {\r\n  //react hook \r\n  const [email, setEamil] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event;\r\n    if(name === \"email\"){\r\n      setEamil(value)\r\n    }else if(name === \"password\"){\r\n      setPassword(value);\r\n    };\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try{\r\n      let data;\r\n      if(newAccount){\r\n        //create new Account\r\n        const data =await authService.createUserWithEmailAndPassword(\r\n          email, password\r\n        )\r\n      }else {\r\n        //Log in\r\n        const data = await authService.signInWithEmailAndPassword(email,password);\r\n      }\r\n    } catch(error){\r\n      setError(error.message)\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount(prev => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n        name=\"email\" \r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        required value={email} \r\n        onChange={onChange} \r\n        className=\"authInput\"\r\n        />\r\n        <input \r\n        name=\"password\" \r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        required value={password} \r\n        onChange={onChange} \r\n        className=\"authInput\"\r\n        /> \r\n        <input type=\"submit\"\r\n        className=\"authInput authSubmit\"\r\n        value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\"> \r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport React  from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {target:{name}, } = event;\r\n    let provider;\r\n    if(name === \"google\"){\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }else if(name ===\"github\"){\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n     await authService.signInWithPopup(provider);\r\n  }\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n);\r\n  };\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if(ok){\r\n      //delete nweet\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      //delete attachment\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  }\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();                            //text는 database 이름에서 온거\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\r\n    setEditing(false);\r\n  };\r\n  const onChnage = (event) => {\r\n    const {target: {value}, } = event;\r\n    setNewNweet(value)\r\n  };\r\n  return (\r\n    <div class=\"nweet\">\r\n        { editing ?  (\r\n          <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"Edit your nweet\"\r\n            value={newNweet} \r\n            required \r\n            autoFocus\r\n            onChange = {onChnage}\r\n            className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick = {toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\r\n          </>\r\n          ): (\r\n          <>\r\n          <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && (<img src={nweetObj.attachmentUrl} />)}\r\n            {isOwner && ( \r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>)}\r\n            </>\r\n          )\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Nweet;","import React, {useState} from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\"); \r\n  const onSubmit = async (event) =>{\r\n    if(nweet === \"\"){\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\"){\r\n      const attachmentRef = storageService\r\n      .ref()\r\n      .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n      const nweetObj = {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl,\r\n      };\r\n    \r\n    //firebase firestore set collection\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const { target: {value}} = event;\r\n    setNweet(value);\r\n  };\r\n  //image upload\r\n  const onFileChange = (event) => {\r\n    const {target: {files}, } = event;\r\n    const theFile = files[0]; //get file\r\n    const reader = new FileReader(); //create reader\r\n    reader.onloadend = (finishedEvent) => {\r\n     const {\r\n       currentTarget: {result}, } = finishedEvent;\r\n      setAttachment(result);\r\n    }  // event listener for reader\r\n    reader.readAsDataURL(theFile); // read file\r\n  };\r\n  const onClearAttachmentClick = () => {\r\n    setAttachment(\"\")\r\n  }\r\n\r\n  return( \r\n  <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n    {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n      </div>\r\n      )}\r\n    </form>  \r\n    )};\r\n\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect( () => {             //snapshot으로 업데이트, 에딧 다 할 수 있음\r\n   dbService.collection(\"nweets\").onSnapshot( (snapshot) => {\r\n     const nweetArray = snapshot.docs.map(doc => ({ id:doc.id, ...doc.data(), }));\r\n     setNweets(nweetArray);\r\n    })\r\n  }, [])\r\n \r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n    <div style={{ marginTop: 30 }}>\r\n      {nweets.map( (nweet) => (\r\n         <Nweet \r\n         key={nweet.id} \r\n         nweetObj={nweet} \r\n         isOwner={nweet.creatorId === userObj.uid} \r\n         />\r\n      ))}\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport { dbService, authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const OnLogOutClick = () => {\r\n    authService.signOut();\r\n    //login 전의 페이지 url로 이동하는 것\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const getMyNweets = async () => {\r\n   const nweets = await dbService\r\n   .collection(\"nweets\")\r\n   .where(\"creatorId\", \"==\", userObj.uid)\r\n   .orderBy(\"createdAt\")\r\n   .get();\r\n  }\r\n  useEffect( () => {\r\n    getMyNweets();\r\n  }, [])\r\n\r\n  const onChange = (event) =>{\r\n    const {\r\n      target: {value},\r\n    } = event;\r\n      setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      if(userObj.displayName !== newDisplayName){\r\n        await userObj.updateProfile({\r\n          displayName: newDisplayName,\r\n        });\r\n        refreshUser();\r\n      };\r\n    };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit= {onSubmit} className=\"profileForm\">\r\n        <input \r\n        onChange = {onChange}\r\n        type=\"text\" \r\n        autoFocus\r\n        placeholder=\"Display name\"\r\n        value={newDisplayName}\r\n        className=\"formInput\"\r\n        />\r\n        <input \r\n        type=\"submit\" \r\n        value=\"Update Profile\"\r\n        className=\"formBtn\"\r\n        style={{ marginTop: 10, }} \r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick = {OnLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n<nav>\r\n  <ul style={{ display: \"flex\", justifyContent: \"center\", alignItem: \"center\", marginTop: 50}}>\r\n    <li style={{ width: 60 , textAlign: \"center\"}}>\r\n      <Link to=\"/\" style={{ margin: 10}}>\r\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n      </Link>\r\n    </li>\r\n    <li style={{ width: 60, textAlign: \"center\"}}>\r\n      <Link to=\"/profile\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyItems: \"center\",\r\n        alignItem: \"center\",\r\n        fontSize: 12,\r\n        \r\n      }}\r\n      >\r\n        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" pull=\"right\" />\r\n        <span style={{ marginTop: 10}}>\r\n          {userObj.displayName ? `${userObj.displayName}` : \"Profile\"}\r\n        </span>\r\n      </Link>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n);\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route,  Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\n\r\n\r\n const AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n  //react hook \r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n          style={{\r\n            maxWidth: 890,\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            marginTop: 80,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >        \r\n        <Route exact path=\"/\">\r\n          <Home userObj={userObj} />\r\n        </Route>\r\n        <Route exact path=\"/profile\">\r\n          <Profile userObj={userObj} refreshUser={refreshUser} />\r\n        </Route>\r\n        </div>\r\n        ) : ( \r\n          <>\r\n          <Route exact path=\"/\"> \r\n            <Auth /> \r\n          </Route>\r\n          </>\r\n          )\r\n        }\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false); \n  //user iD로 로그인기능\n  const [userObj, setUserObj] = useState(null);\n  useEffect( () => {\n    authService.onAuthStateChanged( (user) => {\n    if(user){\n      //firebase language 랑 react language를 연결시켜주는 것\n      //프로필이름 업뎃시 실시간으로 업뎃\n      setUserObj({\n        displayName: user.displayName,\n        uid:user.uid,\n        updateProfile: (args) => user.updateProfile(args),\n      });\n    }else{\n      setUserObj(null);\n    }\n    setInit(true);\n  });\n  }, []);\n\n  const refreshUser = () => {\n   const user = authService.currentUser;\n    setUserObj({        \n      displayName: user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n\n  return (\n    //login 했는지 알 수 있게 해주는 것\n    <>\n    {init ? <AppRouter isLoggedIn = {Boolean(userObj)} refreshUser={refreshUser} userObj={userObj} /> : \"Initializing...\"}\n    <footer style={{\n        marginTop: 50,\n        textAlign: \"center\"\n    }}>&copy; {new Date().getFullYear()} Nwitter </footer>\n    </> \n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}